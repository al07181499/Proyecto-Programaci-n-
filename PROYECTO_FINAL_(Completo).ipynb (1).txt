{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CdJfDpnySP3Y"
      },
      "source": [
        "# **Código completo:**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "4O2kf1AFPNMv"
      },
      "outputs": [],
      "source": [
        "try:\n",
        "    nombre = str(input(\"Ingrese su nombre: \"))\n",
        "    print(f\"¡Bienvenido a Donaciones Regias, {nombre} !\")\n",
        "\n",
        "except EOFError:\n",
        "  print(\"/nError: No se recibió ningún dato.\")\n",
        "except KeyboardInterrupt:\n",
        "      print(\"\\nError: El usuario interrumpió la entrada de datos.\")\n",
        "\n",
        "import time #gracias a 'import' se pueden llamar a las funciones que están dentro del módulo 'time'\n",
        "\n",
        "def carga():\n",
        "  print(\"Cargando\", end=\"\")\n",
        "  for i in range(5):\n",
        "    print(\".\",end=\"\")\n",
        "    time.sleep(1) #'.sleep' es uno de los métodos dentro de 'time', el cual permite que el programa se pause durante la cantidad de sengundos que se pongan en el parámetro.\n",
        "\n",
        "carga() #invoca la función de carga()\n",
        "print(\"\\n\") #se imprimre una nueva línea y da un salto a otra nueva línea hacia abajo\n",
        "\n",
        "print(\"¿Qué desea donar?\")\n",
        "\n",
        "import pandas as pd\n",
        "\n",
        "alimentos = pd.DataFrame(columns=[\"Alimento\", \"Peso (kg)\", \"Caducidad\"])\n",
        "\n",
        "while True:   #ayudar a hacer un bucle hasta que el usuario decida detener el bucle\n",
        "  nombre_alimento = input(\"Ingrese el nombre del alimento (o escriba 'es todo' para finalizar): \")\n",
        "  if nombre_alimento.lower() == 'es todo':\n",
        "    break\n",
        "  else:\n",
        "      try:\n",
        "          peso = float(input(f\"Ingrese el peso en kg de {nombre_alimento}: \"))\n",
        "\n",
        "                  #fecha de caducidad anubis\n",
        "          cad = int(input(\"Escribe día de caducidad: \"))\n",
        "          cad2 = int(input(\"Escribe mes de caducidad: \"))\n",
        "          cad3 = int(input(\"Escribe año de caducidad: \"))\n",
        "\n",
        "          cad_final = (f\"[{cad}/{cad2}/{cad3}]\")\n",
        "\n",
        "\n",
        "          alimentos.loc[len(alimentos)] = [nombre_alimento, peso, cad_final]\n",
        "      except ValueError:\n",
        "          print(\"Error: Ingrese una cantidad numérica válida.\")\n",
        "\n",
        "\n",
        "\n",
        "print(\"\\nTabla de alimentos registrados:\")\n",
        "print(alimentos)\n",
        "\n",
        "try:\n",
        "    archivo = input(\"Ingrese nombre del archivo: \")#esto sirve para que al finalizar se guarde la tabla en un archivo excel\n",
        "    extencion_archivo = f\"{archivo}.xlsx\"\n",
        "    alimentos.to_excel(extencion_archivo, index=False)\n",
        "    print(f\"\\nLa tabla de alimentos ha sido guardada en el archivo '{extencion_archivo}'.\")\n",
        "except FileNotFoundError:\n",
        "  print(\"Error: Archivo no encontrado.\")\n",
        "\n",
        "comedores = {\n",
        "    1: \"Comedor Villa de Santiago\",\n",
        "    2: \"Comedor San Nicolas\",\n",
        "    3: \"Comedor Apodaca\",\n",
        "    4: \"Comedor MTY\"\n",
        "}\n",
        "\n",
        "print(\"\\nSeleccione un comedor para enviar los alimentos:\")\n",
        "for key, value in comedores.items():\n",
        "    print(f\"{key}. {value}\")\n",
        "\n",
        "try:\n",
        "    opcion = int(input(\"\\nIngrese el número del comedor: \"))\n",
        "\n",
        "    if opcion in comedores:\n",
        "        print(f\"\\n Los alimentos fueron enviados a: {comedores[opcion]}\")\n",
        "    else:\n",
        "        print(\"\\n ERROR: Ingresa el número del comedor al que deseas donar.\")\n",
        "except KeyboardInterrupt:\n",
        "      print(\"\\nError: El usuario interrumpió la selección.\")\n",
        "except ValueError:\n",
        "    print(\"Error: Ingrese un número válido.\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "fL9WPFRTVfxG"
      },
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}